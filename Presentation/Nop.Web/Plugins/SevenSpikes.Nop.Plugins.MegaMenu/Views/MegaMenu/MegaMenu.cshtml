@** Copyright 2014 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
    * http://www.nop-templates.com/t/licensinginfo
*@

@using Nop.Core;
@using Nop.Core.Infrastructure;
@using SevenSpikes.Nop.Plugins.MegaMenu.Domain;
@using Nop.Web.Extensions;

@model SevenSpikes.Nop.Plugins.MegaMenu.Models.MegaMenuModel
@{
    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.MegaMenu/Themes/" + Model.Theme + "/Content/MegaMenu.css");

    var supportRtl = this.ShouldUseRtlTheme();
    if (supportRtl)
    {
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.MegaMenu/Themes/" + Model.Theme + "/Content/MegaMenu.rtl.css");
    }

    Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.MegaMenu/Scripts/jquery.lazyload.min.js");
    Html.AddScriptParts("~/Plugins/SevenSpikes.Core/Scripts/SevenSpikesExtensions.js");
}

<input type="hidden" value="@supportRtl.ToString().ToLowerInvariant()" id="isRtlEnabled" />

<ul class="mega-menu">
    @RenderMegaMenu(isMegaMenuResponsive: false)
</ul>
<div class="menu-title"><span>@T("SevenSpikes.MegaMenu.ResponsiveMenuTitle")</span></div>
<ul class="mega-menu-responsive">
    @RenderMegaMenu(isMegaMenuResponsive: true)
</ul>

<script type="text/javascript">

    var megaMenuClick = "click.megaMenuEvent";
    var megaMenuDocumentClick = "click.megaMenuDocumentEvent";

    $(function () {
        $("img.lazy").lazyload({
            event: "menuShown",
            effect: "fadeIn"
        });
    });

    // We need to trigger an event, in order for the lazy loading to work. The default event is scroll, which is not useful in this case
    $(".mega-menu").on("mouseover", function () {
        $("img.lazy").trigger("menuShown");
    });


    $(".mega-menu .sublist li").on('mouseenter', function () {
        $('a', $(this)).first().addClass('hover');
        $('.sublist', $(this)).first().addClass('active');
    }).on('mouseleave', function () {
        $('a', $(this)).first().removeClass('hover');
        $('.sublist', $(this)).first().removeClass('active');
    });

    @if (Model.Settings.EnableClickForDropdown)
    {
        <text>
    $megaMenuDropdowns = $(".mega-menu > li > .dropdown, .mega-menu > li > .sublist");
    $megaMenuDropdowns.siblings("a").click(function (e) {
        e.preventDefault();
    });
    $megaMenuDropdowns.click(function (e) {
        e.stopPropagation();
    });

    // open/close dropdowns
    $(".mega-menu > li").off(megaMenuClick).on(megaMenuClick, function (e) {
        e.stopPropagation();
        var currentDropdown = $(this).children(".dropdown, .sublist");
        $megaMenuDropdowns.not(currentDropdown).filter(":visible").slideToggle("fast"); // Hides all visible dropdowns except the current one
        currentDropdown.slideToggle("fast", function () {
            if ($(this).is(":visible")) {    // remove the overflow:hidden which is left after the dropdown is shown. This is a know bug with jquery and is
                $(this).css("overflow", ""); // due to the box-sizing:border-box; See ticket here: http://bugs.jquery.com/ticket/12854
            }
        }); // Shows current li dropdown only
    });

    // close opened dropdown
    $(document).off(megaMenuDocumentClick).on(megaMenuDocumentClick, function () {
        $megaMenuDropdowns.filter(":visible").slideToggle("fast");
    });
    </text>
    }
    else
    {
        <text>
    $(".mega-menu > li").hover(
        function () { // HANDLER IN
            $(this).children(".dropdown, .sublist").css("display", "block");
        },
        function () { // HANDLER OUT
            $(this).children(".dropdown, .sublist").css("display", "none");
        }
    );
    </text>
    }
</script>

@helper RenderMegaMenu(bool isMegaMenuResponsive)
{

    if (Model.Settings.IncludeHomePageLink)
    {
        <li>
            <a href="@Url.RouteUrl("HomePage")">@T("HomePage")</a>
        </li>
    }
    if (Model.Settings.EnableCategories)
    {
        if (isMegaMenuResponsive)
        {
            @Html.Action("GetCategoriesResponsive", "MegaMenu", Model.Categories)
        }
        else
        {
            @Html.Action("GetCategories", "MegaMenu", Model.Categories)
        }
    }
    if (Model.Settings.EnableManufacturers)
    {
        if (isMegaMenuResponsive)
        {
            @Html.Action("GetManufacturersResponsive", "MegaMenu", Model.Manufacturers)
        }
        else
        {
            @Html.Action("GetManufacturers", "MegaMenu", Model.Manufacturers)
        }
    }
    if (Model.Settings.EnableVendors)
    {
        @Html.Action("GetVendors", "MegaMenu", Model.Vendors)
    }
    if (Model.Settings.IncludeRecentlyAddedLink)
    {
        <li>
            <a href="@Url.RouteUrl("RecentlyAddedProducts")">@T("Products.NewProducts")</a>
        </li>
    }
    if (Model.Settings.EnableMegaMenuTopic)
    {
        @Html.Action("TopicBlock", "MegaMenu", new { systemName = "MegaMenuTopic", enableDropDown = Model.Settings.EnableMegaMenuTopicDropDown && !isMegaMenuResponsive });
    }
    if (Model.Settings.IncludeMyAccountLink)
    {
        <li>
            <a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a>
        </li>
    }
    if (Model.Settings.IncludeBlogLink)
    {
        <li>
            <a href="@Url.RouteUrl("Blog")">@T("Blog")</a>
        </li>
    }
    if (Model.Settings.IncludeNewsLink)
    {
        <li>
            <a href="@Url.RouteUrl("NewsArchive")">@T("News")</a>
        </li>
    }
    if (Model.Settings.IncludeForumLink)
    {
        <li>
            <a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a>
        </li>
    }
    if (Model.Settings.IncludeAboutUsLink)
    {
        @Html.Action("TopicBlock", "MegaMenu", new { systemName = "AboutUs", enableDropDown = Model.Settings.EnableAboutUsDropDown && !isMegaMenuResponsive });
    }
    if (Model.Settings.IncludeContactUsLink)
    {
        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
    }
}